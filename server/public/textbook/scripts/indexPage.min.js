$.urlParam = function (name) {
    var results = new RegExp('[\?&]' + name + '=([^&#]*)')
        .exec(window.location.href);
    if (results == null) {
        return "";
    }
    return results[1] || "";
};

$(document).ready(() => {
    let activeTextbooks = new Set();
    activeTextbooks.add('MYMACalc1').add('MYMACalc2').add('MYMACalc3');

    let activeTypes = new Set();
    activeTypes.add('Definition').add('Theorem');

    // Activate appropriate textbooks based on query params (all if no params passed)
    let textbooksToActivateQuery = $.urlParam('active');
    if (textbooksToActivateQuery !== "") {
        let textbooksToActivate = textbooksToActivateQuery.split('-');
        activeTextbooks.forEach(textbook => {
            if (textbooksToActivate.indexOf(textbook) === -1) {
                let checkbox = $('#' + textbook + 'Checkbox');
                checkbox.prop('checked', false);
            }
        });
    }

    setTimeout(() => {
        for (let i = 1; i <= 3; i++) {
            $('#MYMACalc' + i + 'Checkbox').change();
        }
        $('#definitionsContainer').removeClass('d-none');
        $('#filtersContainer').removeClass('d-none');
    }, 500);

    // Filter by search
    $("#filterSearch").on("keyup", function() {
        var value = $(this).val().toLowerCase();
        $(".index-item").filter(function() {
            // Ensure textbooks and types associated with definition are activated
            let isActiveTextbook = false;
            let isActiveType = false;
            let textbookName = $(this).find('.textbookNames').text();
            let curType = $(this).find('.defType').text();
            activeTextbooks.forEach(textbook => {
                if (textbookName.toLowerCase().indexOf(textbook.toLowerCase()) > -1)
                    isActiveTextbook = true;
            });
            activeTypes.forEach(type => {
                if (curType.toLowerCase() === type.toLowerCase())
                    isActiveType = true;
            });
            // Toggle definitions whose textbooks are active and that match the search
            $(this).toggle(isActiveTextbook && isActiveType && $(this).text().toLowerCase().indexOf(value) > -1);
        });

        // Hide or show clear button depending up whether anything is inside the box
        if (value === "") {
            $("#filterSearchClearBtn").hide();
        } else {
            $("#filterSearchClearBtn").show();
        }
    });

    $("#filterSearchClearBtn").click(function () {
        $("#filterSearch").val('');
        $("#filterSearch").trigger('keyup');
        $(this).hide()
    });

    // Show all checked textbooks
    $(".calcTBFilterCheckbox").change(e => {
        // Get relevant data from element
        let textbook = e.target.nextElementSibling.innerHTML;
        let isChecked = $(e.target).is(':checked');

        // Update activeTextbooks
        if (isChecked) activeTextbooks.add(textbook);
        else activeTextbooks.delete(textbook);

        // Filter definitions accordingly
        $(".index-item").filter(function() {
            let criteria = $(this).find('.textbookNames').text().toLowerCase().indexOf(textbook.toLowerCase()) > -1;

            if (criteria) {
                $(this).toggle(isChecked);
            }
        });
        $("#filterSearch").trigger('keyup');
    });

    // Show all checked types
    $(".calcTypeFilterCheckbox").change(e => {
        // Get relevant data from element
        let type = e.target.nextElementSibling.innerHTML;
        let isChecked = $(e.target).is(':checked');

        // Update activeTypes
        if (isChecked) activeTypes.add(type);
        else activeTypes.delete(type);

        // Filter definitions accordingly
        $(".index-item").filter(function() {
            let criteria = $(this).find('.defType').text().toLowerCase() === type.toLowerCase();

            if (criteria) {
                $(this).toggle(isChecked);
            }
        });
        $("#filterSearch").trigger('keyup');
    });
});
